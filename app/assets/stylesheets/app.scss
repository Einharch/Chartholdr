/*
	Custom CSS for Chartholdr
*/

/* MIXINS*/

@mixin linear-gradient($direction, $color-stops...) {
  // Direction has been omitted and happens to be a color-stop
  @if is-direction($direction) == false {
    $color-stops: $direction, $color-stops;
    $direction: 180deg;
  }
 
  background: nth(nth($color-stops, 1), 1);
  background: -webkit-linear-gradient(legacy-direction($direction), $color-stops);
  background: linear-gradient($direction, $color-stops);
}

/// Convert a direction to legacy syntax
/// @param {Keyword | Angle} $value - Value to convert
/// @require {function} is-direction
/// @require {function} convert-angle
/// @throw Cannot convert `#{$value}` to legacy syntax because it doesn't seem to be a direction.;
@function legacy-direction($value) {
  @if is-direction($value) == false {
    @error "Cannot convert `#{$value}` to legacy syntax because it doesn't seem to be a direction.";
  }
 
  $conversion-map: (
    to top          : bottom,
    to top right    : bottom left,
    to right top    : left bottom,
    to right        : left,
    to bottom right : top left,
    to right bottom : left top,
    to bottom       : top,
    to bottom left  : top right,
    to left bottom  : right top,
    to left         : right,
    to left top     : right bottom,
    to top left     : bottom right
  );
 
  @if map-has-key($conversion-map, $value) {
    @return map-get($conversion-map, $value);
  }
 
  @return 90deg - $value;
}

/// Test if `$value` is a valid direction
/// @param {*} $value - Value to test
/// @return {Bool}
@function is-direction($value) {
  $is-keyword: index((to top, to top right, to right top, to right, to bottom right, to right bottom, to bottom, to bottom left, to left bottom, to left, to left top, to top left), $value);
  $is-angle: type-of($value) == 'number' and index('deg' 'grad' 'turn' 'rad', unit($value));
  @return $is-keyword or $is-angle;
}

/*    */

@import 'palette';
@import url(http://fonts.googleapis.com/css?family=Lato:100,300);

a {
  color: $dolphin-fart;
}
a:hover {
  color: $submarine;
}

h1 {
  font-family: 'Lato', sans-serif, 'Arial';
  text-shadow: 1px 1px 1px rgba(0, 0, 0, 0.4);
  font-weight: 300;
}

h2, h3, h4 {
  font-family: 'Lato', sans-serif, 'Arial';
  text-shadow: 1px 1px 1px rgba(0, 0, 0, 0.4);
  font-weight: 100;
  a {
    font-weight: 300;
    color: black;
    text-shadow: none;
  }
  small {
    text-shadow: 0.5px 0.5px 0.5px rgba(0, 0, 0, 0.4);
  }
}

small {
  a {
    color: $dolphin-fart;

  }
}

h5 {
  font-weight: 300;
	color: black !important;
  a {
    color: $bubble-blue;
  }
}


header .row .title {
  padding-top: 4em;
}
header {
  padding: 0 0 5em 0;
  text-align: center;
  // background-color: $dolphin-fart;
  @include linear-gradient($dolphin-fart, $captains-chair);
}

section {
  padding: 6em 0 4em 0;
}

.deepwater {
  @include linear-gradient($captains-chair, $cold-grape);
}

.links {
  color: $cold-grape;
	border: 2px solid $submarine;
	padding: 0.5em;
	text-align: center;
	display: block;
	background-color: white;

  ::-moz-selection { /* Code for Firefox */
    color: $randy-newman;
    background: $submarine;
  }

  ::selection {
      color: $randy-newman; 
      background: $submarine;
  }
}

.footer-icon {
  color: $bubble-blue;
  font-size: 2em;
  padding-top: 0.5em;
  font-family: 'fontello';
  font-style: normal;
  font-weight: normal;
  speak: none;
  display: inline;
  text-decoration: inherit;
  width: 1em;
  margin-right: .2em;
  text-align: center;
  /* opacity: .8; */
  font-variant: normal;
  text-transform: none;
  line-height: 1em;
  margin-left: .2em;
  /* font-size: 120%; */
  -webkit-font-smoothing: antialiased;
}
.footer-icon:hover {
  color: $submarine;
}
.super-align {
  vertical-align: super;
}

// Small screens
@media only screen { } /* Define mobile styles */

@media only screen and (max-width: 40em) {
  header {
    padding: 0 0 2em 0;
  }
  header .row .title {
    padding-top: 1em;
  }
  section {
    padding: 2em 0 1em 0;
  }
  h2, h3, h4 {
    font-weight: 300;
  }
  .links {
    font-size: 1em;
  }
  // Icons fall off on super small mobile. So shrink them.
  .footer-icon {
    font-size: 1.5em;
  }


  } /* max-width 640px, mobile-only styles, use when QAing mobile issues */

// Medium screens
@media only screen and (min-width: 40.063em) { } /* min-width 641px, medium screens */

@media only screen and (min-width: 40.063em) and (max-width: 64em) { } /* min-width 641px and max-width 1024px, use when QAing tablet-only issues */

// Large screens
@media only screen and (min-width: 64.063em) { } /* min-width 1025px, large screens */

@media only screen and (min-width: 64.063em) and (max-width: 90em) { } /* min-width 1025px and max-width 1440px, use when QAing large screen-only issues */

// XLarge screens
@media only screen and (min-width: 90.063em) { } /* min-width 1441px, xlarge screens */

@media only screen and (min-width: 90.063em) and (max-width: 120em) { } /* min-width 1441px and max-width 1920px, use when QAing xlarge screen-only issues */

// XXLarge screens
@media only screen and (min-width: 120.063em) { } /* min-width 1921px, xxlarge screens */






